// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#ifndef CONTROLSS_H
#define CONTROLSS_H
#include "Commands/Subsystem.h"
#include "WPILib.h"

/**
 *
 *
 * @author ExampleAuthor
 */
class ControlSS: public Subsystem {
private:
	// It's desirable that everything possible is private except
	// for methods that implement subsystem capabilities
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

	// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
public:
	ControlSS();
	void InitDefaultCommand();

	void toggle(int toggleNum);
	void setSols(int  cylinder, int state);
	void allSolsLow();
	void updateSols(int cylinder);
	void waitForPSI(int x);
	void runSequence(int x);
	void reset();

	std::shared_ptr<Solenoid> latchSol[2];
	bool latchState;//0 = latchSol[0] & 1 = latchSol[1]
	std::shared_ptr<Solenoid> loaderSol[2];
	bool loaderState;//0 = loaderSol[0] & 1 = loaderSol[1]

	Timer timer;

	bool loaded;

	int loadingPressure, firingPressure;

	std::shared_ptr<DigitalInput> frontLS;
	std::shared_ptr<DigitalInput> backLS;

	std::shared_ptr<AnalogInput> pressureGauge;
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS
	// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS
};

#endif
