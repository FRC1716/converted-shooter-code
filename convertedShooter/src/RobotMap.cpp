// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "RobotMap.h"
#include "LiveWindow/LiveWindow.h"


// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=ALLOCATION
std::shared_ptr<DigitalInput> RobotMap::controlSSfrontLS;
std::shared_ptr<DigitalInput> RobotMap::controlSSbackLS;
std::shared_ptr<DigitalInput> RobotMap::controlSSsideLS;
std::shared_ptr<Solenoid> RobotMap::controlSSsolenoid1;
std::shared_ptr<Solenoid> RobotMap::controlSSsolenoid2;
std::shared_ptr<Solenoid> RobotMap::controlSSsolenoid3;
std::shared_ptr<Solenoid> RobotMap::controlSSsolenoid4;
std::shared_ptr<AnalogInput> RobotMap::controlSSpressureGauge;
// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=ALLOCATION

void RobotMap::init() {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    LiveWindow *lw = LiveWindow::GetInstance();

    controlSSsolenoid1.reset(new Solenoid(1));
    lw->AddActuator("ControlSS", "solenoid1", controlSSsolenoid1);

    controlSSsolenoid1.reset(new Solenoid(2));
    lw->AddActuator("ControlSS", "solenoid2", controlSSsolenoid2);

    controlSSsolenoid1.reset(new Solenoid(3));
    lw->AddActuator("ControlSS", "solenoid3", controlSSsolenoid3);

    controlSSsolenoid1.reset(new Solenoid(4));
    lw->AddActuator("ControlSS", "solenoid4", controlSSsolenoid4);

    controlSSfrontLS.reset(new DigitalInput(0));
    lw->AddSensor("ControlSS", "frontLS", controlSSfrontLS);
    
    controlSSbackLS.reset(new DigitalInput(1));
    lw->AddSensor("ControlSS", "backLS", controlSSbackLS);
    
    controlSSsideLS.reset(new DigitalInput(2));
    lw->AddSensor("ControlSS", "sideLS", controlSSsideLS);

    controlSSpressureGauge.reset(new AnalogInput(1));
    lw->AddSensor("ControlSS", "pressureGauge", controlSSpressureGauge);


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
}
