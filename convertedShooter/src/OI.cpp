// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "OI.h"

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
#include "SmartDashboard/SmartDashboard.h"
#include "Commands/AutonomousCommand.h"
#include "Commands/fireC.h"
#include "Commands/loadC.h"
#include "Commands/releaseC.h"
#include "Commands/manualLoaderToggle.h"
#include "Commands/manualLatchToggle.h"


// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES

OI::OI() {
    // Process operator interface input here.
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    joystickLeft.reset(new Joystick(0));
    
    joystickB11.reset(new JoystickButton(joystickLeft.get(), 11));
    joystickB11->WhileHeld(new manualLatchToggle());
    joystickB10.reset(new JoystickButton(joystickLeft.get(), 10));
    joystickB10->WhileHeld(new manualLoaderToggle());
    joystickB3.reset(new JoystickButton(joystickLeft.get(), 3));
    joystickB3->WhileHeld(new releaseC());
    joystickB2.reset(new JoystickButton(joystickLeft.get(), 2));
    joystickB2->WhileHeld(new loadC());
    joystickB1.reset(new JoystickButton(joystickLeft.get(), 1));
    joystickB1->WhileHeld(new fireC());

    // SmartDashboard Buttons
    SmartDashboard::PutData("toggleStates", new fireC());

    SmartDashboard::PutData("Autonomous Command", new AutonomousCommand());
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
}

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS

std::shared_ptr<Joystick> OI::getJoystickLeft() {
   return joystickLeft;
}

// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
